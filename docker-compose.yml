# docker-compose.yml
version: "3.8"
services:
  mongo:
    image: mongo:5.0
    container_name: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=chat-app
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./database/db:/data/db
      - ./database/dev.archive:/Databases/dev.archive
      - ./database/production:/Databases/production
  mongo-express:
    image: mongo-express
    container_name: mexpress
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_URL=mongodb://root:password@mongo:27017/?authSource=admin
      - ME_CONFIG_BASICAUTH_USERNAME=mexpress
      - ME_CONFIG_BASICAUTH_PASSWORD=mexpress
    links:
      - mongo
    restart: unless-stopped
    ports:
      - "8081:8081"
  redis:
    image: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  peer:
    image: peerjs/peerjs-server
    container_name: peer
    ports:
      - "9000:9000"
    restart: unless-stopped
    command: --port 9000 --path /
  chat-client:
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - chat-server
    ports:
      - "4000:4000"
  chat-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=redis
      - DATABASE_URL=mongodb://root:password@mongo:27017/chat-app?authSource=admin
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - redis
